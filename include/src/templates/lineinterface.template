#ifndef _CACHEPP_LINE_TEMPLATE
#define _CACHEPP_LINE_TEMPLATE

#include "libs/exceptionpp/exception.h"

#include "src/lineinterface.h"

template <typename T> cachepp::LineInterface<T>::LineInterface(cachepp::identifier id) : id(id), is_loaded(0), is_dirty(0), checksum(T()) {}

template <typename T> cachepp::identifier cachepp::LineInterface<T>::get_identifier() { return(this->id); }

template <typename T> std::vector<uint8_t> cachepp::LineInterface<T>::get_data() {
	if(!this->get_is_loaded()) {
		throw(exceptionpp::RuntimeError("cachepp::LineInterface<T>::get_data", "attempting to get data when line is not loaded"));
	}
	return(this->data);
}

template <typename T> void cachepp::LineInterface<T>::set_data(std::vector<uint8_t> data) {
	if(!this->get_is_loaded()) {
		throw(exceptionpp::RuntimeError("cachepp::LineInterface<T>::set_data", "attempting to set data when line is not loaded"));
	}
	this->set_is_dirty(true);
	this->data = data;
}

template <typename T> bool cachepp::LineInterface<T>::get_is_loaded() { return(this->is_loaded); }
template <typename T> bool cachepp::LineInterface<T>::get_is_dirty() { return(this->is_dirty); }

template <typename T> void cachepp::LineInterface<T>::load() {
	if(this->get_is_loaded()) {
		return;
	}
	this->aux_load();
	this->set_is_loaded(true);
	this->validate();
}

template <typename T> void cachepp::LineInterface<T>::unload() {
	if(!this->get_is_loaded()) {
		return;
	}
	if(this->get_is_dirty()) {
		this->set_checksum(this->hash());
	}
	this->aux_unload();
	this->set_is_loaded(false);
}

/**
 * checks the data in this->data
 *
 * raises exceptionpp::RuntimeError if the data is not valid
 */
template <typename T> void cachepp::LineInterface<T>::validate() {
	if(!this->get_is_dirty()) {
		return;
	}
	if(this->get_checksum() != this->hash()) {
		throw(exceptionpp::RuntimeError("cachepp::LineInterface<T>::validate", "calculated checksum did not match data"));
	}
}

template <typename T> void cachepp::LineInterface<T>::set_is_loaded(bool is_loaded) { this->is_loaded = is_loaded; }
template <typename T> void cachepp::LineInterface<T>::set_is_dirty(bool is_dirty) { this->is_dirty = is_dirty; }

template <typename T> void cachepp::LineInterface<T>::set_checksum(T checksum) { this->checksum = checksum; }
template <typename T> T cachepp::LineInterface<T>::get_checksum() { return(this->checksum); }

#endif
